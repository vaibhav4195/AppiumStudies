<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="130" started-at="2022-05-24T07:19:56Z" finished-at="2022-05-24T07:19:56Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="130" started-at="2022-05-24T07:19:56Z" finished-at="2022-05-24T07:19:56Z">
      <class name="baseClass.SetupFire">
        <test-method status="FAIL" signature="setup()[pri:0, instance:baseClass.SetupFire@7cd62f43]" name="setup" is-config="true" duration-ms="91" started-at="2022-05-24T12:49:56Z" finished-at="2022-05-24T12:49:56Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Specified firefox binary location does not exist or is not a real file: D:\Users\Temp\Desktop\AppiumPractise\AppiumStudy]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Specified firefox binary location does not exist or is not a real file: D:\Users\Temp\Desktop\AppiumPractise\AppiumStudy
	at com.google.common.base.Preconditions.checkState(Preconditions.java:504)
	at org.openqa.selenium.firefox.Executable.<init>(Executable.java:43)
	at org.openqa.selenium.firefox.FirefoxBinary.<init>(FirefoxBinary.java:123)
	at org.openqa.selenium.firefox.FirefoxOptions$Binary.asBinary(FirefoxOptions.java:420)
	at java.util.Optional.map(Unknown Source)
	at org.openqa.selenium.firefox.FirefoxOptions.getBinaryOrNull(FirefoxOptions.java:220)
	at org.openqa.selenium.firefox.FirefoxOptions.getBinary(FirefoxOptions.java:216)
	at baseClass.SetupFire.setup(SetupFire.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:523)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:224)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:146)
	at org.testng.TestRunner.beforeRun(TestRunner.java:658)
	at org.testng.TestRunner.run(TestRunner.java:626)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testSearchAppium()[pri:0, instance:baseClass.SetupFire@7cd62f43]" name="testSearchAppium" duration-ms="0" started-at="2022-05-24T12:49:56Z" finished-at="2022-05-24T12:49:56Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Specified firefox binary location does not exist or is not a real file: D:\Users\Temp\Desktop\AppiumPractise\AppiumStudy]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Specified firefox binary location does not exist or is not a real file: D:\Users\Temp\Desktop\AppiumPractise\AppiumStudy
	at com.google.common.base.Preconditions.checkState(Preconditions.java:504)
	at org.openqa.selenium.firefox.Executable.<init>(Executable.java:43)
	at org.openqa.selenium.firefox.FirefoxBinary.<init>(FirefoxBinary.java:123)
	at org.openqa.selenium.firefox.FirefoxOptions$Binary.asBinary(FirefoxOptions.java:420)
	at java.util.Optional.map(Unknown Source)
	at org.openqa.selenium.firefox.FirefoxOptions.getBinaryOrNull(FirefoxOptions.java:220)
	at org.openqa.selenium.firefox.FirefoxOptions.getBinary(FirefoxOptions.java:216)
	at baseClass.SetupFire.setup(SetupFire.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:523)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:224)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:146)
	at org.testng.TestRunner.beforeRun(TestRunner.java:658)
	at org.testng.TestRunner.run(TestRunner.java:626)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchAppium -->
      </class> <!-- baseClass.SetupFire -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
